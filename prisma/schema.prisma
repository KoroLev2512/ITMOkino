generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
}
model Movie {
  id        Int      @id @default(autoincrement())
  image     String   @db.VarChar(255)
  title     String   @db.VarChar(255)
  genre     String   @db.VarChar(100)
  description String
  duration  Int
  premiere  DateTime @db.Date
  year      Int
  actors    Json
  sessions  Session[]
}
model Session {
  id       Int      @id @default(autoincrement())
  time     String
  movieId  Int
  movie    Movie   @relation(fields: [movieId], references: [id])
  seats    Seat[]
}
model Seat {
  id        Int      @id @default(autoincrement())
  sessionId Int
  row       Int
  seat      Int
  // NOTE: isReserved field is kept for database compatibility, but it's not being actively used
  // Instead, we consider a seat reserved if it has an associated ticket (ticket !== null)
  // For future schema changes, we could consider removing this field
  isReserved Boolean @default(false)
  session   Session @relation(fields: [sessionId], references: [id])
  ticket    Ticket?
}

model Ticket {
  id          Int      @id @default(autoincrement())
  customerName String
  customerPhone String
  seatId      Int      @unique
  seat        Seat     @relation(fields: [seatId], references: [id])
  createdAt   DateTime @default(now())
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  isAdmin   Boolean  @default(false)
}